<?PHP

if(!function_exists('sys_get_temp_dir')) {
	function sys_get_temp_dir() {
		if( $temp=getenv('TMP') )	return $temp;
		if( $temp=getenv('TEMP') )	return $temp;
		if( $temp=getenv('TMPDIR') )    return $temp;
		$temp=tempnam(__FILE__,'');
		if (file_exists($temp)) {
			unlink($temp);
			return dirname($temp);
		}
		return null;
	}
}

if(!function_exists('get_www_user')) {
	function get_www_user() {
		$lockfile = sys_get_temp_dir() . '/' . Get_brand_sniffername() . '.testpid';
		touch($lockfile);
		if(function_exists('posix_getpwuid')) {
			$info = @posix_getpwuid(fileowner($lockfile));
		} else {
			return "apache"; // the posix_getpwuid does not exists assume user apache
		}
		@unlink($lockfile);
		return($info['name']);
	}
}

$SNIFFERNAME = Get_brand_sniffername();
$APP_NAME = Get_brand_name();
$SHARESITE = Get_brand_sharesite();

$langEn = Array(
	'none' => 'None',
	'selectSmthingToDelete' => 'You have no item',
	'loginFailed' => 'Invalid username or password.',
	'invalidPasswordCheck' => 'Invalid password.',
	'accountIsBlocked' => 'Your account is blocked.',
	'remoteAddressNotAllowed' => 'Your remote address not allowed in your account.',
	'bad2FACode' => '2FA PIN code verification failed. Please try again and make sure your server is properly synced to world time.',
	'badGoogleEmail' => 'The Google\'s email is not in the GUI\'s user\'s database.',
	'attemptToLoginWithBadPassword' => 'Attempt to login with bad password',
	'cloudLoginFailed' => 'Invalid username or password.',
	'notEnoughSpace' => 'Not enough disk space on server side.',
	'menu' => Array(
		'cdr' => 'CDR',
		'ss7' => 'SS7',
		'http' => 'HTTP',
		'cdr_chart' => 'Charts',
		'prot_only' => 'Protocols Only',
		'sip_only' => 'SIP Only',
		'h323_only' => 'H323 Only *',
		'iax_only' => 'IAX Only *',
		'other_only' => 'Other *',
		'vpn_only' => 'Active VPN Tunnels *',
		'spy' => 'Active Calls',
		'spy_table' => 'table',
		'spy_map' => 'map',
		'livepacket' => 'Live sniffer',
		'dashboard' => 'Dashboard',
		'dashboard_d' => 'Dashboard',
		'register' => 'SIP REGISTER',
		'register_active' => 'Active',
		'register_failed' => 'Failed',
		'register_state' => 'State',
		'messages' => 'SIP MESSAGES',
		'sip_msg' => 'SIP Opt., Subsc., Notify',
		'sip_msg_active' => 'Active',
		'sip_msg_stored' => 'Stored',
		'sip_msg_settings' => 'Settings',
		'ipaccount' => 'IP Account',
		'ipaccount_ui' => 'by IP addresses',
		'ipaccount_ui_cust' => 'by custommers',
		'ipaccount_ti' => 'by IP addresses / typical intervals',
		'ipaccount_realtime_chart' => 'realtime chart',
		'tracker' => 'Issue Tracker',
		'tracker_tickets' => 'Tickets',
		'tracker_setting' => 'Setting',
		'tracker_status' => 'Statuses',
		'tracker_category' => 'Categories',
		'tracker_priority' => 'Priority Colors',
		'tracker_setting_setting' => 'Email templates',
		'users_audit' => 'Users & Audit',
		'users' => 'Users',
		'groups' => 'Groups',
		'screen_popup_users' => 'Easy Caller ID users',
		'resellers' => 'Resellers',
		'customers' => 'Customers',
		'audit_log' => 'Audit Log',
		'filters' => 'Capture Rules',
		'filter_ip' => 'IP based',
		'filter_telnum' => 'Number based',
		'filter_domain' => 'Domain based',
		'filter_sip_header' => 'SIP header based',
		'codebooks' => 'Groups',
		'cb_ip_groups' => 'IP addresses',
		'cb_number_groups' => 'Tel. numbers',
		'cb_domain_groups' => 'Domains',
		'cb_custhead_cdr_groups' => 'CDR Custom headers',
		'cb_custhead_msg_groups' => 'Message Custom headers',
		'cb_email_groups' => 'Emails',
		'cb_country_groups' => 'Countries',
		'cb_ua_groups' => 'User Agents',
		'cb_timeperiod' => 'Time periods',
		'alerts_daily_reports' => 'Alerts & Reports',
		'alerts' => 'Alerts',
		'alerts_fraud' => 'Alerts / Anti Fraud',
		'reports' => 'Reports',
		'set_alerts' => 'Configure Alerts',
		'fraud_configuration' => 'Configure Fraud detection',
		'set_daily_reports' => 'Configure Daily Reports',
		'alerts_sended' => 'Sent Alerts',
		'daily_reports_sended' => 'Sent Reports',
		'report_call_summary' => 'Call summary',
		'report_qos' => 'QOS report',
		'report_vpn' => 'VPN details',
		'report_black_ip' => 'Black listed IPs',
		'report_white_ip' => 'White listed IPs',
		'report_call_detail' => 'Call Detail Records',
		'report_csv_exports' => 'CSV Export',
		'tools' => 'Tools',
		'day_stats' => 'Report generator',
		'tcpdump' => 'TCP dump',
		'nagios' => 'Nagios',
		'nagios_host' => 'Host',
		'nagios_service' => 'Service',
		'nagios_contact' => 'Contact',
		'nagios_setting' => 'Setting',
		'mtr' => 'MTR',
		'hostname_table' => 'IP Lookup',
		'customer_prefix' => 'Prefix Lookup',
		'customer_country_prefix' => 'Customer country prefixes',
		'load_pcap' => 'Load PCAP',
		'batch_download_cdr_wav' => 'Batch download CDR Wav',
		'show_call_stats' => 'Concurrent calls stats',
		'collectd' => 'Collectd',
		'backup_restore_gui' => 'Backup & Restore GUI',
		'check_mysql_schema' => 'Check MySQL schema',
		'generate_debug_log' => 'Generate debug log',
		'backup_gui' => 'backup',
		'restore_gui' => 'restore',
		'backup_gui_config_tables' => 'configuration tables',
		'restore_gui_config_tables' => 'configuration tables',
		'backup_gui_data_tables' => 'data tables',
		'restore_gui_data_tables' => 'data tables',
		'backup_gui_configuration' => 'configuration files',
		'restore_gui_configuration' => 'configuration files',
		'svg_paint' => 'Network map',
		'load_geoip_data' => 'Load GeoIP Data',
		'geoip_customer' => 'Customer GeoIP',
		'geoip_city' => 'city',
		'geoip_country' => 'country',
		'load_osm_tiles' => 'Load OSM Tiles',
		'settings' => 'Settings',
		'sensor_table' => 'Sensors',
		'ipacc_capt_ip' => 'IPACC - next capture ip',
		'ipacc_config_resellers' => 'Resellers configuration',
		'cdr_charts' => 'CDR charts',
		'custom_headers' => 'Custom headers',
		'cdr_custom_headers' => 'CDR',
		'message_custom_headers' => 'Message',
		'sip_msg_custom_headers' => 'Opt., Subsc., Notify',
		'message_types' => 'Message types',
		'server_side_configuration' => 'System configuration',
		'common_settings' => 'Country prefix',
		'billing_configuration' => 'Billing configuration',
		'crontab_configuration' => 'Crontab scheduler',
		'custom_cleaning' => 'Custom auto cleaning',
		'send_call_info' => 'Send call information',
		'localization' => 'Localization',
		'change_user_auth' => 'Change user auth',
		'user_config' => 'User configuration',
		'license' => 'License',
		'acl_manager' => 'ACL Manager',
		'acl_configuration' => 'Configuration',
		'acl_whitelist' => 'White List',
		'acl_blacklist' => 'Black List',
		'upgrade' => 'Upgrade',
		'network' => 'Network',
		'user_settings' => 'User settings',
		'logout' => 'Logout',
	),

	'validation' => Array(
		'IntErrFuncNA' => 'Internal error, non-existing validator!',
		'generalErrMsg' => 'The form contains invalid values. Check form.',
		'extenErr' => 'The telephone number contains invalid value',
		'sameInterfaceErr' => 'Cannot add more than one IP address on the same interface. Use an another interface or VLAN.'
	),
	
	'maxAttachmentSize' => 'Maximum attachment size is 10MB.',
	'needSetMaxAllowedPacket' => 'Need set max_allowed_packet in MYSQL. Try next.',

	'mailing' => Array(
		'templ_insert_ticket_subject' =>
'new ticket: {:title}',
		'templ_insert_ticket' =>
'<style>
   td { vertical-align: top; }
</style>

<table border="0" style="font-size: 10pt;">
<tr>
   <td>created&nbsp;at:</td>
   <td>{:created_at}</td>
<tr></tr>
   <td>created&nbsp;by:</td>
   <td>{:created_name}</td>
<tr></tr>
   <td>assigned&nbsp;to:</td>
   <td>{:assigned_name}</td>
<tr></tr>
   <td>title:</td>
   <td>{:title}</td>
<tr></tr>
   <td>description:</td>
   <td>{:description}</td>
<tr></tr>
   <td>priority:</td>
   <td>{:priority}</td>
<tr></tr>
   <td>status:</td>
   <td>{:status_name}</td>
<tr></tr>
   <td>category:</td>
   <td>{:category_name}</td>
</table>',
		'templ_update_ticket_subject' =>
'update ticket: {:title}',
		'templ_update_ticket' =>
'<style>
   td { vertical-align: top; }
</style>

<table border="0" style="font-size: 10pt;">
<tr>
   <td>update&nbsp;at:</td>
   <td>{:changeDateTime}</td>
<tr></tr>
   <td>update&nbsp;by:</td>
   <td>{:changeUserName}</td>
</table>

<p style="font-size: 10pt; margin-top: 10px; margin-bottom: 3px;">
   <b><i>change data</i></b>
</p>

{:changeDataTable}',
		'templ_insert_comment_subject' =>
'new comment in ticket: {:ticket->title}',
		'templ_insert_comment' =>
'<style>
   td { vertical-align: top; }
</style>

<table border="0" style="font-size: 10pt;">
<tr>
   <td>created&nbsp;at:</td>
   <td>{:created_at}</td>
<tr></tr>
   <td>created&nbsp;by:</td>
   <td>{:created_name}</td>
<tr></tr>
   <td>comment:</td>
   <td>{:description}</td>
<tr>
[=(:$data->alert_descr)?
   "</tr>
       <td>highlight comment:</td>
       <td>{:alert_descr}</td>
    <tr>":
   ""]
</table>'),

	'databaseSqlError' => 'database / SQL error',
	'databaseSqlSyntaxError' => 'database / SQL syntax error',
	'accessDenied' => 'access denied',
	'badPermission' => 'bad permission',
	'emptyAlert' => 'Alert is empty (result does not contain data)',
	'emptyReport' => 'Report is empty (result does not contain data)',
	'undefinedResult' => 'Result is not defined (possible error in php on server side)',
	'errorPrepareSharedCdr' => 'Error in prepare shared CDR',
	'errorPrepareSharedMessage' => 'Error in prepare shared Message',
	'errorSendToEmail' => 'Error send to specified e-mail',
	'unknownError' => 'Unknown error',
	'filterQuery' => 'filter query',
	'cdrFetchDbFailed' => 'fetch record from database failed',
	'messageFetchDbFailed' => 'fetch record from database failed',
	'pcapFileNotExists' => 'pcap file nopt exists',
	'pcapMissing' => 'missing pcap file',
	'pcapFopenFail' => 'open pcap error',
	'pcapFreadFail' => 'read pcap error',
	'tmpZipFileFopenFail' => 'open temp zip file error',
	'tmpZipFileFreadFail' => 'read temp zip file error',
	'fileOpenFail' => 'open file {:0} error',
	'fileReadFail' => 'read file {:0} error',
	'getSysTempDir' => 'error in \'sys_get_temp_dir\'',
	'zipCreate' => 'error in create zip file (\'$zip->open\')',
	'removeRtpFromPcapFail' => 'error in call tshark -R sip',
	'tsharkPcapFail' => 'error in call tshark',
	'mergePcapsFail' => 'error in call mergecap',
	'untarFail' => 'error in extraction from tar',
	'missingDataInRecord' => 'missing data in record',
	'missingBaseParameter' => 'missing base parameter(s)',
	'badQueryRequest' => 'bad query request',
	'loginUsed' => 'username / login name is used',
	'loginUsedInCloud' => 'username / login name is used in another user in cloud',
	'badLoginType' => 'bad login type',
	'badVerifyNewPassword' => 'Bad verify of new the password.',
	'newPasswordMustBeDifferentFromOld' => 'New password must be different from the old.',
	'bad2FA' => '2FA PIN code failed. Please try again and make sure your server is properly synced to world time.',
	'badVerify2FA' => '2FA PIN code verification failed. Please try again and make sure your server is properly synced to world time.',
	'badOldPassword' => 'invalid old password',
	'badPassword' => 'invalid password',
	'unknown_ip' => 'unknown IP',
	'not_privilege_ip' => 'to this address do not have sufficient privileges',
	'not_implemented' => 'not implemented in server side',
	'missing_implementation' => 'missing implementation on server side',
	'errorOpenInputFile' => 'open input file error',
	'badContentInputFile' => 'input file not contain valid data',
	'badContentCsvInputFile' => 'input file not contain valid csv data',
	'missingFile' => 'missing file',
	'unknownFile' => 'unknown file',
	'badPermissionForFile' => 'bad permission for file',
	'badPermissionForWriteConfiguration' => 'Error in save configuration. Check permission.',
	'missingServerSideConfigKey' => 'missing server side configuration key',
	'exceedsLimitFileSize' => 'The uploaded file exceeds the maximum allowed size (or parameters list too long).
Try setting in php.ini:

  upload_max_filesize = 200M
  post_max_size = 200M',
	'emptyParamsOrExceedsLimitParamSize' => 'Empty parameteres or parameters list too long.<br><br>' .
						'Try setting in php.ini:<br><br>' .
						'&nbsp;&nbsp;upload_max_filesize = 200M<br>' . 
						'&nbsp;&nbsp;post_max_size = 200M',
	'file' => 'file',
	'_notExists' => 'does not exists',
	'_notReading' => 'does not open for reading',
	'_notWriting' => 'does not open for writing',
	'File_' => 'File',
	'Files_' => 'Files',
	'_file_' => 'file',
	'_notFound' => 'not found',
	'_isEmpty' => 'is empty',
	'callIdIsEmptyInRegister' => 'Call ID is empty. Please check if you have rule in capture rules if you want to store pcap files for SIP register.',
	'messageHasRemoveDueToUserPrivilege' => 'Message has remove due to user privilege',
	'messageURL_HasRemoveDueToUserPrivilege' => 'Message URL has remove due to user privilege',
	'dataAreNotYetWrittenToDisk' => 'Data not yet written to disk. Try reload again later.',
	'readPcapFromSensorFailed' => 'Read pcap from sensor failed.',
	'readPcapFromSensorTimeout' => 'Timeout occurred in read pcap from sensor.',
	'missingTshark' => 'Missing tshark or tshark failed.',
	'socketErrors' => array(
		'fsockopenFail' => 'create socket error (fsockopen)',
		'fwrite' => 'write socket error (fwrite)',
		'badHttpResult' => 'bad http result'
	),
	'missingSox' => 'Sox binary missing. Try: apt-get install sox / yum install sox.',
	'runAnotherProcess' => 'The operation can not be started because another process is in progress.',
	'dataToSaveDoesNotMeetUserRestrictions' => 'Data to save does not meet user restrictions.',
	'importedDataDoesNotMeetUserRestrictions' => 'Imported data does not meet user restrictions.',
	'CDRfilterItems' => array(
		'fdatefrom' => 'date from',
		'fdateto' => 'date to',
		'fcaller' => 'caller num',
		'fcalled' => 'called num',
		'fcallerd_type_set' => 'caller or called num',
		'fcountry_code_caller' => 'country by caller num',
		'fcountry_code_called' => 'country by called num',
		'fcountry_code_callerd_type_set' => 'country by caller or called num',
		'fcaller_group_id' => 'caller group num',
		'fcalled_group_id' => 'called group num',
		'fcallerd_group_id_type_set' => 'caller or called group num',
		'fcaller_domain' => 'caller domain',
		'fcalled_domain' => 'called domain',
		'fcallerd_domain_type_set' => 'caller or called domain',
		'fcaller_domain_group_id' => 'caller group domain',
		'fcalled_domain_group_id' => 'called group domain',
		'fcallerd_domain_group_id_type_set' => 'caller or called group domain',
		'fcallername' => 'caller name',
		'fsipcallerip' => 'caller SIP IP',
		'fsipcalledip' => 'called SIP IP',
		'fsipcallerdip_type_set' => 'caller od called SIP IP',
		'fcountry_code_sipcallerip' => 'country by caller SIP IP',
		'fcountry_code_sipcalledip' => 'country by called SIP IP',
		'fcountry_code_sipcallerd_type_set' => 'country by caller or called SIP IP',
		'fsipcallerip_group_id' => 'caller group SIP IP',
		'fsipcalledip_group_id' => 'called group SIP IP', 
		'fsipcallerdip_group_id_type_set' => 'caller or called group SIP IP',
		'fsipcallerport' => 'caller SIP Port',
		'fsipcalledport' => 'called SIP Port',
		'fsipcallerdport_type_set' => 'caller od called SIP Port',
		'fcodec' => 'codec',
		'fexclude_codec' => 'exclude codec',
		'fconnect_durationgtt' => 'connect duration (>)',
		'fconnect_durationgt' => 'connect duration (>=)',
		'fconnect_durationlt' => 'connect duration (<)',
		'fdurationgt' => 'duration (>=)',
		'fdurationlt' => 'duration (<)',
		'fpddgt' => 'progress time (>=)',
		'fpddlt' => 'progress time (<)',
		'fringinggt' => 'ringing time (>=)',
		'fringinglt' => 'ringing time (<)',
		'fsipresponse' => 'Last SIP response',
		'fallsipresponse' => 'SIP response',
		'freason_sip' => 'Reason SIP',
		'freason_q850' => 'Reason Q.850',
		'ftrunk' => 'direction',
		'fwho_hangup' => 'who hangup',
		'funconfirmed_bye' => 'unconfirmed BYE',
		'fbye' => 'interrupted call',
		'fone_way' => 'one way',
		'fmissing_rtp' => 'missing RTP',
		'fmissing_srtp_key' => 'missing SRTP Key',
		'fdetect_fas' => 'FAS (False Answer Supervision)',
		'fdetect_zerossrc' => 'ZeroSSRC',
		'fis_sipalg_detected' => 'SIP-ALG',
		'fsdp_media_type' => 'SDP media type',
		'fsdp_media_type_multiple_operator' => 'SDP media type - multiple select operator',
		'frtp_state' => 'RTP state',
		'fchange_src_rtp_port' => 'change source RTP port',
		'ftelevent_request_response' => 'telephone event request / response',
		'fbye_code' => 'bye code',
		'fa_ua' => 'caller UA', 
		'fb_ua' => 'called UA', 
		'fab_ua_type_set' => 'caller or called UA',
		'fa_ua_group_id' => 'caller group UA', 
		'fb_ua_group_id' => 'called group UA', 
		'fab_ua_group_id_type_set' => 'caller or called group UA',
		'fa_saddr' => 'caller RTP IP',
		'fb_saddr' => 'called RTP IP',
		'fab_saddr_type_set' => 'caller or called RTP IP',
		'fa_saddr_group_id' => 'caller group RTP IP',
		'fb_saddr_group_id' => 'called group RTP IP',
		'fab_saddr_group_id_type_set' => 'caller or called group RTP IP',
		'fcallid' => 'call id',
		'fnote' => 'note',
		'fmax_retransmission_invite_gt' => 'max. retransmission invite (>=)',
		'fmax_retransmission_invite_lt' => 'max. retransmission invite (<)',
		'fip_fragmented' => 'IP fragmented',
		'fsensor_id' => 'sensor',
		'frtp_port' => 'RTP port',
		'frtp_port_source' => 'RTP port (source)',
		'frtp_port_dest' => 'RTP port (destination)',
		'frtp_port_sd_type_set' => 'RTP port (source or destination)',
		'frtp_ip_port' => 'RTP IP, port',
		'frtp_ip_port_source' => 'RTP IP, port (source)',
		'frtp_ip_port_dest' => 'RTP IP, port (destination)',
		'frtp_ip_port_sd_type_set' => 'RTP IP, port (source or destination)',
		'fsdp_ip_port' => 'SDP IP, port',
		'fsdp_ip_port_source' => 'SDP IP, port (source)',
		'fsdp_ip_port_dest' => 'SDP IP, port (destination)',
		'fsdp_ip_port_sd_type_set' => 'SDP IP, port (source or destination)',
		'frtcp_maxjitter' => 'RTCP Jitter (A) (max >=)',
		'frtcp_maxjitter_called' => 'RTCP Jitter (B) (max >=)',
		'frtcp_maxjitter_ab_set' => 'RTCP Jitter (A or B) (max >=)',
		'frtcp_avgjitter' => 'RTCP Jitter (A) (average >=)',
		'frtcp_avgjitter_called' => 'RTCP Jitter (B) (average >=)',
		'frtcp_avgjitter_ab_set' => 'RTCP Jitter (A or B) (average >=)',
		'frtcp_maxfr' => 'RTCP % loss (A) (max >=)',
		'frtcp_maxfr_called' => 'RTCP % loss (B) (max >=)',
		'frtcp_maxfr_ab_set' => 'RTCP % loss (A or B) (max >=)',
		'frtcp_avgfr' => 'RTCP % loss (A) (average >=)',
		'frtcp_avgfr_called' => 'RTCP % loss (B) (average >=)',
		'frtcp_avgfr_ab_set' => 'RTCP % loss (A or B) (average >=)',
		'fa_last_rtp_from_end_eq' => 'last RTP from last SIP - caller (=)',
		'fa_last_rtp_from_end_gt' => 'last RTP from last SIP - caller (>)',
		'fa_last_rtp_from_end_lt' => 'last RTP from last SIP - caller (<)',
		'fb_last_rtp_from_end_eq' => 'last RTP from last SIP - called (=)',
		'fb_last_rtp_from_end_gt' => 'last RTP from last SIP - called (>)',
		'fb_last_rtp_from_end_lt' => 'last RTP from last SIP - called (<)',
		'fab_last_rtp_from_end_or' => 'last RTP from last SIP - or condition between caller and called',
		'fmosf1' => 'MOS - Fixed 50 (A) (<)',
		'fmosf1_called' => 'MOS - Fixed 50 (B) (<)',
		'fmosf1_ab_set' => 'MOS - Fixed 50 (A or B) (<)',
		'fmosf2' => 'MOS - Fixed 200 (A) (<)',
		'fmosf2_called' => 'MOS - Fixed 200 (B) (<)',
		'fmosf2_ab_set' => 'MOS - Fixed 200 (A or B) (<)',
		'fmosadapt' => 'MOS - Adaptive 200 (A) (<)',
		'fmosadapt_called' => 'MOS - Adaptive 200 (B) (<)',
		'fmosadapt_ab_set' => 'MOS - Adaptive 200 (A or B) (<)',
		'fmos_lqo_caller' => 'MOS - LQO (A) (<)',
		'fmos_lqo_called' => 'MOS - LQO (B) (<)',
		'fmos_lqo_caller_ab_set' => 'MOS - LQO (A or B) (<)',
		'fdelay' => 'Delay',
		'floss' => 'Loss',
		'fmos_min_ge' => 'MOS (min) (A) (>=)',
		'fmos_min_ge_called' => 'MOS (min) (B) (>=)',
		'fmos_min_ge_ab_set' => 'MOS (min) (A or B) (>=)',
		'fmos_min_lt' => 'MOS (min) (A) (<)',
		'fmos_min_lt_called' => 'MOS (min) (B) (<)',
		'fmos_min_lt_ab_set' => 'MOS (min) (A or B) (<)',
		'fpacket_loss_perc_ge' => 'Packet loss (A) (>=)',
		'fpacket_loss_perc_ge_called' => 'Packet loss (B) (>=)',
		'fpacket_loss_perc_ge_ab_set' => 'Packet loss (A or B) (>=)',
		'fpacket_loss_perc_lt' => 'Packet loss (A) (<)',
		'fpacket_loss_perc_lt_called' => 'Packet loss (B) (<)',
		'fpacket_loss_perc_lt_ab_set' => 'Packet loss (A or B) (<)',
		'fsilence_ge' => 'Silence (A) (>=)',
		'fsilence_ge_called' => 'Silence (B) (>=)',
		'fsilence_ge_ab_set' => 'Silence (A or B) (>=)',
		'fsilence_lt' => 'Silence (A) (<)',
		'fsilence_lt_called' => 'Silence (B) (<)',
		'fsilence_lt_ab_set' => 'Silence (A or B) (<)',
		'fsilence_end_ge' => 'Last Silence (A) (>=)',
		'fsilence_end_ge_called' => 'Last Silence (B) (>=)',
		'fsilence_end_ge_ab_set' => 'Last Silence (A or B) (>=)',
		'fsilence_end_lt' => 'Last Silence (A) (<)',
		'fsilence_end_lt_called' => 'Last Silence (B) (<)',
		'fsilence_end_lt_ab_set' => 'Last Silence (A or B) (<)',
		'fclipping_ge' => 'Clipped Frames (A) (>=)',
		'fclipping_ge_called' => 'Clipped Frames (B) (>=)',
		'fclipping_ge_ab_set' => 'Clipped Frames (A or B) (>=)',
		'fclipping_lt' => 'Clipped Frames (A) (<)',
		'fclipping_lt_called' => 'Clipped Frames (B) (<)',
		'fclipping_lt_ab_set' => 'Clipped Frames (A or B) (<)',
		'_start' => 'start',
		'_end' => 'end',
		'_contain' => 'contain',
		'_regexp' => 'regexp'
	),
	'CDRtooltips' => array(
		'lastRtpFromEnd' => 'this RTP stream ends _VALUE_ seconds sooner than last SIP packet',
		'mosF1' => 'MOS score for simulated fixed jitterbuffer with max size 50ms',
		'mosF2' => 'MOS score for simulated fixed jitterbuffer with max size 200ms',
		'mosAdapt' => 'MOS score for adaptive jitterbuffer with max size 500ms',
		'mosLQO' => 'MOS LQO',
		'mosXR_avg' => 'MOS XR avg',
		'mosXR_min' => 'MOS XR min',
		'mosSilence_avg' => 'MOS Silence avg',
		'mosSilence_min' => 'MOS Silence min',
		'pdd' => 'Post Dial Delay (PDD) is experienced by the customer originating the call from the time the final digit is dialled to the point at which they hear ring tone or other in-band information. Where the originating network is required to play an announcement before completing the call then this definition of PDD excludes the duration of such announcements.',
		'delayStats' => 'Delay distribution shows all PDV intervals colored accordingly. Left number is 50 – 70ms interval and has green color. The most right number is PDV interval >300ms and has red color. Zero values are not displayed.',
		'delayNoStats' => 'No jitter (PDV) in RTP packets.',
		'lossStats' => 'Loss distribution shows all loss intervals colored accordingly. The green number on the left represents occurrences of one consecutive loss. The red number on the right represents occurrences of more than ten consecutive losses. Zero values are not displayed.',
		'lossNoStats' => 'No packet loss in RTP packets.',
		'rtcpAvg' => 'RTCP part (if RTCP packet was captured) shows MAX RTP jitter (J:26.3) and MAX RTCP % loss (L:72.3). RTCP in Caller column shows how called side sees the stream.',
		'lossPerc' => 'Average packet loss',
		'silence' => 'silence [%]',
		'silence_end' => 'last silence [s]',
		'ipLookup' => 'substituted by SQL IP lookup or DNS resolver',
		'prefixLookup' => 'substituted by prefix table',
		'rtp_duration' => 'Duration of the RTP stream',
		'miss_rtp_duration' => 'Missing column duration in the cdr_rtp table. See sensor log hints for the column\'s adding.'
	),
	'CDRtexts' => array(
		'callernameIsEmpty' => 'callername is empty'
	),
	'geoip_prov' => array(
		'local1' => 'local data (geoLiteCity - maxmind.com)',
		'local2' => 'local data (extended precission)',
		'maxmind_key' => 'maxmind.com (with paid key)',
		'ipinfodb_key' => 'ipinfodb.com (with free key)',
		'ipinfodb' => 'ipinfodb.com (public/demo portal)',
		'freegeoip' => 'freegeoip.net (public portal)',
		'maxmind' => 'maxmind.com (public/demo portal)'
	),
	'configuration_group' => array(
		'BASIC' => 'Basic',
		'DB_CONNECTION' => 'Database',
		'NATIONAL_SETTING' => 'National',
		'INTERVALS' => 'Intervals',
		'EMAIL_HTTP_REFERER' => 'Email',
		'ADVANCED' => 'Advanced',
		'DB_CONNECTION_ALERTS' => 'Optional database for cron, alerts and reports'
		//'GEOIP' => '',
		//'NAGIOS' => '',
		//'CUSTOMERS' => '',
		//'IPACCOUNT' => '',
		//'TCPDUMP' => '',
		//'EXPERT' => ''
	),
	'configuration_name' => array(
		'SPOOLDIR' => 'sniffer data path',
		'SECOND_SPOOLDIR' => 'sniffer second data path',
		'NEXT_SPOOLDIRS' => 'additional spool directories',
		'SPOOLDIR_BY_SENSOR' => 'spooldir by sensor id',
		'VPMANAGERHOST' => 'default sensor hostname',
		'VPMANAGERPORT' => 'default sensor TCP port',
		'SQL_DRIVER' => 'database driver',
		'MYSQL_HOST' => 'MySQL hostname',
		'MYSQL_DB' => 'MySQL database',
		'MYSQL_USER' => 'MySQL username',
		'MYSQL_PASS' => 'MySQL password',
		'MYSQL_KEY' => 'MySQL key filename',
		'MYSQL_CERT' => 'MySQL cert filename',
		'MYSQL_CACERT' => 'MySQL CA cert filename',
		'MYSQL_CAPATH' => 'MySQL CA path',
		'MYSQL_CIPHERS' => 'MySQL ciphers',
		'MYSQL_DISABLE_TRANSACTION_ISOLATION_LEVEL_READ_UNCOMMITTED' => 'disable transaction isolation level read uncommitted',
		'MSSQL_HOST' => 'MSSQL hostname',
		'MSSQL_DB' => 'MSSQL database',
		'MSSQL_USER' => 'MSSQL username',
		'MSSQL_PASS' => 'MSSQL password',
		'ODBC_DSN' => 'ODBC DSN',
		'ODBC_USER' => 'ODBC username',
		'ODBC_PASS' => 'ODBC password',
		'ODBC_DRIVER' => 'ODBC driver',
		'TIMEZONE' => 'Timezone',
		'SENSORS_TIMEZONE' => 'Sensors Timezone',
		'DATE_FORMAT' => 'Date format',
		'TIME_FORMAT' => 'Time format',
		'WEEK_START' => 'Week start',
		'LANGUAGE' => 'Shortcut of a language used in alert & reports',
		'DEFAULT_CDR_TYPE_INTERVAL' => 'Default CDR interval',
		'DEFAULT_CDR_INTERVAL' => 'Default CDR interval in days',
		'DEFAULT_DASHBOARD_TYPE_INTERVAL' => 'Default Dashboard interval',
		'LEGSBYCID_INTERVAL' => 'Default Legs by CID interval',
		'LEGSBYHEADER_INTERVAL' => 'Default Legs by header interval',
		'CRULES_REMOVE_EXPIRE_TIME_GLOBAL' => 'Global expiration time for the capture rules (in hours)',
		'DEFAULT_EMAIL_FROM' => 'Default email in From header',
		'DISABLE_EMAIL_PLAIN_TEXT_INFO' => 'Disable email plain text',
		'EMAIL_HEADER_EOL' => 'Email header EOL',
		'HTTP_REFERER' => 'WEB URL',
		'GEOIP_USE_LOCAL_DATA' => 'Use GEOIP local database',
		'GEOIP_KEY_MAXMIND' => 'GEOIP maxmind.com KEY',
		'GEOIP_USER_ID_MAXMIND' => 'GEOIP maxmind.com USER ID',
		'GEOIP_KEY_IPINFODB' => 'GEOIP ipinfodb.com KEY',
		'NAGIOS_ENABLE' => 'Enable nagios',
		'NAGIOS_USER' => 'Nagios user',
		'NAGIOS_BIN' => 'Path to nagios binary',
		'NAGIOS_MAIN_CONFIG' => 'Path to nagios.cfg',
		'NAGIOS_VM_CONFIG' => 'Path to vm.cfg',
		'NAGIOS_VM_CONFIG_PREFIX' => 'Objects name prefix',
		'NAGIOS_STATUS' => 'Path to status.dat',
		'NAGIOS_CMD_APPLY_VM_CONFIG' => 'Command which reloads config',
		'NAGIOS_CMD_APPLY_SUDO' => 'run sudo before reload command',

		'G_ENABLE_AUTH' => 'Enable Google Sign in.',
		'G_DISABLE_BUTTON' => 'Don\'t display Google Sign in button.',
		'G_CLIENT_ID' => 'Google client ID for Google Sign in',
		'ENABLE_GROUPS_CDR' => 'Enable CDR group panel',
		'DISABLE_SENSOR_NAME_CDR' => 'Don\'t display sensor name in CDR',
		'DETECT_FILES_IN_REMOTE_SENSORS' => 'Detect if exists spool files in remote sensors during prepare grid page (cdr, messages, ss7)',
		'ENABLE_MOS_LQO' => 'Activate MOS LQO',
		'ENABLE_CDR_COLUMN_CALL_ID' => 'Enable Call ID column in CDR',
		'ENABLE_CDR_FORCE_INDEX_CALLDATE' => 'Enable \'FORCE INDEX(`calldate`)\' in cdr queries',
		'ENABLE_SQL_IP_REVERSE_LOOKUP' => 'Enable database IP reverse lookup',
		'ENABLE_IP_REVERSE_LOOKUP' => 'Enable DNS reverse lookup',
		'ENABLE_SQL_IP_REVERSE_LOOKUP_ALERTS' => 'Enable database IP reverse lookup in alerts & reports',
		'ENABLE_IP_REVERSE_LOOKUP_ALERTS' => 'Enable DNS reverse lookup in alerts & reports',
		'ENABLE_SQL_CUSTOMER_PREFIX_LOOKUP' => 'Enable database number lookup',
		'PCAP_DEDUPLICATION' => 'Pcap deduplication before download',
		'GET_PCAP_SELECT_TIMEOUT' => 'Timeout of select command to get pcap',

		'NORTPFIRSTLEG' => 'Disable rtpfirstleg param',
		'WAV_API_KEY' => 'WAV download key',
		'DISABLE_SHOW_DOMAIN' => 'Hide SIP domain in CDR',
		'DISABLE_LIVEPLAY' => 'Hide liveplay',
		'DISABLE_CDRPLAY' => 'Hide WAV play',
		'UPLOADPCAP_SNIFFERCONF' => 'Upload sniffer conf path',
		'SHARE_PASSWORD' => 'CDR share key',
		'NER_LSR_FILTER' => 'NER last sip response filter',
		'CSV_FIELD_SEPARATOR' => 'CSV field separator',
		'CSV_DISABLE_SMART_FIELD_BORDER' => 'Disable smart field border in CSV ( ="..." )',
		'DISABLE_PERCENTILES' => 'Disable percentiles in CDR groups',
		'DISABLE_BINARY_GROUPS' => 'Disable binary module for create CDR groups',
		'DISABLE_HTML_AUDIO_PLAYER' => 'Disable HTML audio player',
		'DEDICATED_WAV_PLAYER' => 'Use dedicated wav player instead mini flash player',
		'DISABLE_WAV_SECURITY' => 'Disable URL WAV protection',
		'PAGE_SIZE' => 'Page size',
		'CRON_LOCK_TIMEOUT' => 'Cron lock timeout',
		'CRON_PARALLEL_TASKS' => 'Number of parallel tasks for cron operations (alerts, reports)',
		'UPG_DOWNLOAD_TIMEOUT' => 'Upgrade download timeout',
		'HTTP_PROXY_SERVER' => 'Http proxy (for upgrades)',
		'DISABLE_CHECK_SPOOLDIR' => 'Disable check sniffer data path',
		'CONVERTCHARS_IN_LOCAL_SPOOL' => 'Convert chars for local spools',
		'HIDE_TIMEZONE_INFORMATION' => 'Hide timezone information',
		'DISABLE_CHECK_CRONTAB' => 'Disable check crontab',
		'ENABLE_SCREEN_POPUP' => 'Enable EasyCallerID',
		'DISABLE_CHECK_NEW_VERSION' => 'Disable new versions check',
		'DISABLE_LIVE_SNIFFER' => 'Disable live sniffer',
		'HIDE_MESSAGE' => 'Hide message',
		'HIDE_MESSAGE_SECRET' => 'Hide message secret',
		'DISABLE_AUTOLICENSE' => 'Disable autolicense',
		'CSV_EXPORT_FOLDER' => 'Folder for export CSV',
		'ENABLE_NETWORK' => 'Enable network',
		'DISABLE_CDRVMSHARE' => "Disable share CDR on $SHARESITE",
		'DISABLE_FRAME_CHECK' => "Disable check if application run in frame",
		'SET_COOKIE_SAMESITE_NONE_IN_LOGIN_BY_SID' => 'Enable set cookie parameter \'SameSite=None\' in login by SID',
		'REPORT_TIMEOUT' => 'Report (alerts) timeout (maximum execution time)',
		'DISABLE_CHART_CACHE' => 'Disable chart cache',
		'MAP_TYPE' => 'Map Type',
		'GOOGLE_MAP_API_KEY' => 'Google Map API Key',
		'CRASH_BACKTRACE_DISABLE_SEND' => 'Disable sending email containing crash backtrace from sniffer',
		'CRASH_BACKTRACE_TO_EMAIL' => 'Email address for send crash backtrace from sniffer',
		'CRASH_BACKTRACE_CUSTOM_ID' => 'The custom ID that will be included in email with crash backtrace from sniffer',
		'AUDIT_LOG_FILE' => 'Audit log file for textual output',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_WAV' => 'Auto-audit template for download audio',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP' => 'Auto-audit template for download pcap from cdr',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MULTIPLE'=> 'Auto-audit template for download pcap from multiple cdr (user prefix)',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MULTIPLE_CALL' => 'Auto-audit template for download pcap from multiple cdr (cdr item)',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MESSAGE' => 'Auto-audit template for download pcap from message',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_SS7' => 'Auto-audit template for download pcap from ss7',
		'AUTOAUDIT_TEMPLATE_PLAY_WAV' => 'Auto-audit template for play audio',
		'AUTOAUDIT_TEMPLATE_SHOW_FAX' => 'Auto-audit template for show fax',
		'AUTOAUDIT_TEMPLATE_BATCH_DOWNLOAD' => 'Auto-audit template for batch download',
		'AUTOAUDIT_TEMPLATE_SET_FILTER_CDR' => 'Auto-audit template for set cdr filter',
		'SHOW_AVERAGE_PACKET_LOSS_IN_CDR_GRID' => 'Show average packet loss in cdr grid',
		'MAXIMUM_PARALLEL_TASKS_IN_MERGE_PCAPS' => 'Maximum parallel tasks in merge pcaps',
		'BAD_LOGIN_LOG' => 'Bad login log',
		'EULA_AGREE' => 'EULA Agree',
		'MYSQL_HOST_ALERTS' => 'MySQL hostname',
		'MYSQL_DB_ALERTS' => 'MySQL database',
		'MYSQL_USER_ALERTS' => 'MySQL username',
		'MYSQL_PASS_ALERTS' => 'MySQL password',
		'MYSQL_KEY_ALERTS' => 'MySQL key filename',
		'MYSQL_CERT_ALERTS' => 'MySQL cert filename',
		'MYSQL_CACERT_ALERTS' => 'MySQL CA cert filename',
		'MYSQL_CAPATH_ALERTS' => 'MySQL CA path',
		'MYSQL_CIPHERS_ALERTS' => 'MySQL ciphers',
		'SESSION_NAME_IGNORE_SERVER_FOLDER' => 'Don\'t use server folder in the session name',
		'' => '',
		'' => '',
		
	),
	'configuration_comment' => array(
		//'SNIFFER_NAME' => 'kljahkgda kashgfhgas kajdsgfhasdg jkasg',
		'HTTP_REFERER' => 'URL which will be used for hypertext links. For example in email alerts',
		'SPOOLDIR' => 'Directory path to the sniffer data',
		'SQL_DRIVER' => 'sql driver: mysql | mssql | odbc',
		'VPMANAGERHOST' => 'default sniffer sensor hostname (localhost). If you have more sensors define it in settings -> sensors',
		'VPMANAGERPORT' => 'default sniffer sensor port.',
		'DATE_FORMAT' => 'Date format with default Y-m-d. http://www.php.net/manual/en/function.date.php',
		'TIME_FORMAT' => 'Time format with default G:i:s. http://www.php.net/manual/en/function.date.php',
		'DEFAULT_CDR_TYPE_INTERVAL' => 'Default time interval used in CDR section',
		'DEFAULT_CDR_INTERVAL' => 'How many days will be filtered in CDR section by default',
		'DEFAULT_DASHBOARD_TYPE_INTERVAL' => 'Default time interval used in Dashboard section',
		'LEGSBYCID_INTERVAL' => 'Find all related calls which starts +- internal - default 5 seconds',
		'LEGSBYHEADER_INTERVAL' => 'Find all related calls which starts +- internal - default 5 seconds',
		'CRULES_REMOVE_EXPIRE_TIME_GLOBAL' => 'Global expiration time for the capture rules (in hours).',
		'DISABLE_EMAIL_PLAIN_TEXT_INFO' => 'Some mailers (outlook 2003) does not like plain text and show only plain text part of email messages. If you do not see HTML part enable this option',
		'GEOIP_USE_LOCAL_DATA' => 'Enable or disable use of internal GEOIP database (if loaded)',
		'GEOIP_KEY_MAXMIND' => 'Personal key for maxmind.com geoip service',
		'GEOIP_USER_ID_MAXMIND' => 'Personal user id for maxmind.com geoip service',
		'GEOIP_KEY_IPINFODB' => 'Personal key for ipinfodb.com',
		
		'NAGIOS_ENABLE' => 'Enable nagios web interfae',
		'NAGIOS_USER' => 'Unix user under which is nagios running. This user is used in sudo so the GUI know how to send HUP signal to nagios (reload configuration)',
		'NAGIOS_CMD_APPLY_SUDO' => 'Insert "sudo -u NAGIOS_USER" before "killall -HUP nagios" and before nagios3 -v /path/to/config. This is neccessery in case the nagios is running under another user than http server which is probably in 99% of cases. Typical username for nagios is "nagios" in debian like systems. You also need to put "'.get_www_user().' ALL=(nagios) NOPASSWD: ALL" into sudoers file.',

		'ENABLE_GROUPS_CDR' => 'Enable CDR group bottom panel',
		'ENABLE_SQL_IP_REVERSE_LOOKUP' => 'If enabled in CDR IP addresses will be named by internal IP database lookup table',
		'ENABLE_IP_REVERSE_LOOKUP' => 'If enabled in CDR IP address will be named by DNS',
		'ENABLE_SQL_CUSTOMER_PREFIX_LOOKUP' => 'If enabled in CDR tel. numbers will be named by internal prefix database lookup table',
		'NORTPFIRSTLEG' => 'Disable --rtp-firstleg when decoding audio from pcap.',
		'DISABLE_WAV_SECURITY' => "if true, user is not checked against valid session when downloading WAV. Suitable for downloading WAV outside $APP_NAME GUI. If you need to secure it, you can set WAV key",
		'WAV_API_KEY' => 'if you set Disable URL WAV protection and set WAV KEY, you have to pass &key=puthereSomeKey to WAV /php/wav.php?id=226587&key=puthereSomeKey. If you do not set WAV_API_KEY you do not need to pass that key (but still have to set true to DISABLE_WAV_SECURITY',
		'WAV_API_KEY' => 'KEY used to download WAV files without user/pass authentication',
		'DISABLE_SHOW_DOMAIN' => 'Hide SIP domain in CDR',
		'DISABLE_LIVEPLAY' => 'Hide live play in active calls',
		'DISABLE_CDRPLAY' => 'Hide play buttons in CDR',
		'UPLOADPCAP_SNIFFERCONF' => "Path to sniffer $SNIFFERNAME.conf which is used when uploading pcap files.",
		'SHARE_PASSWORD' => 'String used to generate unique hashes in URL for sharing cdr',
		'PAGE_SIZE' => 'Page size for pdf export',
		'CONVERTCHARS_IN_LOCAL_SPOOL' => 'The list of characters that should be converted to underscore (_) in filenames. It\'s as a convertchar option in sensor config. But used only when the GUI accesses the local spooldirs directly (without sensor). Local spooldirs are defined in "sniffer data path", "sniffer second data path" and "additional spool directories" options. E.g. useful if the spooldirs are on the NTFS filesystem.',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_WAV' => 'Template for auto-audit in user activity: download audio',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP' => 'Template for auto-audit in user activity: download pcap from cdr',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MULTIPLE'=> 'Template for auto-audit in user activity: download pcap from multiple cdr (user prefix)',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MULTIPLE_CALL' => 'Template for auto-audit in user activity: download pcap from multiple cdr (cdr item)',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_MESSAGE' => 'Template for auto-audit in user activity: download pcap from message',
		'AUTOAUDIT_TEMPLATE_DOWNLOAD_PCAP_SS7' => 'Template for auto-audit in user activity: download pcap from ss7',
		'AUTOAUDIT_TEMPLATE_PLAY_WAV' => 'Template for auto-audit in user activity: play audio',
		'AUTOAUDIT_TEMPLATE_SHOW_FAX' => 'Template for auto-audit in user activity: show fax',
		'AUTOAUDIT_TEMPLATE_BATCH_DOWNLOAD' => 'Template for auto-audit in user activity: batch download',
		'AUTOAUDIT_TEMPLATE_SET_FILTER_CDR' => 'Template for auto-audit in user activity: set cdr filter'
	),
	'api' => array(
		'unhandledRequest' => 'unhandled request',
		'getVoipCalls_missingParameters' => 'startTime, endTime, caller must be set',
		'getPCAP_missingParameters' => 'cdrId or callId or custom header must be set',
		'getVoiceRecording_missingParameters' => 'cdrId or callId or custom header must be set',
		'getShareURL_missingParameters' => 'cdrId or callId or custom header must be set',
		'getDashboardPanel_missingParameters' => 'dashboard and panel must be set',
		'reportSummary_missingParameters' => 'report_name, datetime_from and datetime_to must be set',
		'noMatchCdr' => 'no match cdr',
		'noMatchCdrSummaryReport' => 'no match cdr summary report',
		'notExistsCdrId1' => 'cdr id ',
		'notExistsCdrId2' => ' does not exist',
		'notExistsCdr' => 'not exists cdr',
		'notExistsCdrWithRtp' => 'not exists cdr with rtp',
		'cdrNotContainRtpStream' => 'cdr not contain rtp stream',
		'userMustBeSet' => 'user must be set',
		'passwordMustBeSet' => 'password must be set',
		'failedFindUserByHash' => 'failed find user by hash',
		'accessDenied' => 'access denied'
	),
	'CDRsum' => array(
		'lastSIPresponse' => 'sip response',
		'sipcallerip' => 'sip caller IP / host name',
		'sipcalledip' => 'sip called IP / host name',
		'caller' => 'caller number',
		'called' => 'called number',
		'a_ua' => 'user agent - caller',
		'b_ua' => 'user agent - called',
		'country_code' => 'country',
		'cnt_all' => 'total CDR',
		'total_perc' => '%',
		'duration_all' => '∑ minutes',
		'asr_all' => 'ASR',
		'ner_all' => 'NER',
		'acd_all' => 'ACD',
		'mos_all' => 'MOS',
		'mos_perc95_all' => 'MOS %95',
		'mos_perc99_all' => 'MOS %99',
		'mos_lqo_caller_all' => 'LQO A',
		'mos_lqo_caller_perc95_all' => 'LQO A %95',
		'mos_lqo_caller_perc99_all' => 'LQO A %99',
		'mos_lqo_called_all' => 'LQO B',
		'mos_lqo_called_perc95_all' => 'LQO B %95',
		'mos_lqo_called_perc99_all' => 'LQO B %99',
		'packets_lost_all' => 'PL',
		'packets_lost_perc95_all' => 'PL %95',
		'packets_lost_perc99_all' => 'PL %99',
		'jitter_all' => 'J',
		'jitter_perc95_all' => 'J %95',
		'jitter_perc99_all' => 'J %99',
		'delay_all' => 'D',
		'delay_perc95_all' => 'D %95',
		'delay_perc99_all' => 'D %99',
		'pdd_all' => 'PDD',
		'pdd_perc95_all' => 'PDD %95',
		'pdd_perc99_all' => 'PDD %99',
		'cps_max' => 'CPS max',
		'cps_avg' => 'CPS avg',
		'silence_all' => 'S',
		'silence_perc95_all' => 'S %95',
		'silence_perc99_all' => 'S %99',
		'silence_end_all' => 'LS',
		'silence_end_perc95_all' => 'LS %95',
		'silence_end_perc99_all' => 'LS %99',
		'clipping_all' => 'CF',
		'clipping_perc95_all' => 'CF %95',
		'clipping_perc99_all' => 'CF %99'
	),
	'alerts' => array(
		'alert' => 'alert',
		'report' => 'report',
		'date' => 'Date',
		'datetime' => 'Date, time',
		'list_of_watched_ip_addresses' => 'List of watched IP addresses',
		'list_of_watched_numbers' => 'List of watched Numbers',
		'parameters' => 'parameters',
		'incidents' => 'incidents',
		'CDR' => 'CDR',
		'MESSAGES' => 'MESSAGES',
		'please_show_html_part' => 'Please show html part. ' . 
					   'If you see this text in html mode, try setting in system configuration: DISABLE_EMAIL_PLAIN_TEXT_INFO - true.',
		'insufficient_memory' => 'Insufficient memory to complete processing. Report is not complete. ' .
					 'Increase memory_limit in php.ini (usually in /etc/php...).',
		'ok cdr records' => 'ok cdr records',
		'summary by' => 'summary by',
		'summary by IP source' => 'summary by IP source',
		'summary by IP destination' => 'summary by IP destination',
		'IP source' => 'IP source',
		'IP destination' => 'IP destination',
		'summary by call start' => 'summary by call start',
		'result' => 'result',
		'cdr records' => 'cdr records',
		'ASR' => 'ASR',
		'NER' => 'NER',
		'ACD' => 'ACD',
		'count cdr' => 'count cdr',
		'from' => 'from',
		'to' => 'to',
		'summary' => 'summary',
		'all' => 'all',
		'errors' => 'errors',
		'errors [%]' => 'errors [%]',
		'summary by type timeout' => 'summary by type timeout',
		'cdr summary' => 'cdr summary',
		'MINUTES WITHOUT CALL' => 'MINUTES WITHOUT CALL',
		'sensor' => 'sensor',
		'local' => 'local',
		'sensors' => 'sensors',
		'address' => 'address',
		'number' => 'number',
		'domain' => 'domain',
		'events' => 'events',
		'filter' => 'filter',
		'filters' => 'filters',
		'registers count' => 'number of registrations',
		'filters without registers' => 'filters without registers',
		'to num' => 'to num',
		'unregistered time' => 'unregistered time',
		'at' => 'at',
		'alertNeedAggregation' => 'This alert need enable billing aggregation. Goto Setting / Billing configuration / aggregation.',
		'alertNeedAggregation_missingTypes' => 'missing types: ',
		'alertNeedAggregation_missingType_ip' => 'addresses',
		'alertNeedAggregation_missingType_number' => 'numbers',
		'alertNeedAggregation_missingType_domain' => 'domains',
		'total calls' => 'Total Calls',
		'total calls - inbound' => 'Total Calls - Inbound',
		'total calls - outbound' => 'Total Calls - Outbound',
		'average MOS' => 'Average MOS',
		'params' => array(
			'MOS' => 'MOS',
			'MOS XR avg' => 'MOS XR avg',
			'MOS XR min' => 'MOS XR min',
			'MOS XR avg Caller' => 'MOS XR avg Caller',
			'MOS XR min Caller' => 'MOS XR min Caller',
			'MOS XR avg Called' => 'MOS XR avg Called',
			'MOS XR min Called' => 'MOS XR min Called',
			'MOS Silence avg' => 'MOS Silence avg',
			'MOS Silence min' => 'MOS Silence min',
			'MOS Silence avg Caller' => 'MOS Silence avg Caller',
			'MOS Silence min Caller' => 'MOS Silence min Caller',
			'MOS Silence avg Called' => 'MOS Silence avg Called',
			'MOS Silence min Called' => 'MOS Silence min Called',
			'MOS LQO Caller' => 'MOS LQO Caller',
			'MOS LQO Called' => 'MOS LQO Called',
			'#lost packets' => '#lost packets',
			'jitter' => 'jitter',
			'delay_count_with_limit' => 'delay count (limit>={:0}ms)',
			'silence' => 'silence',
			'last silence' => 'last silence',
			'clipped frames' => 'clipped frames',
			'one way' => 'one way',
			'missing RTP' => 'missing RTP',
			'incidents' => 'incidents',
			'CPS' => 'CPS',
			'ASR' => 'ASR',
			'NER' => 'NER',
			'ACD' => 'ACD',
			'Error Code' => 'Error Code',
			'Custom Header' => 'Custom Header',
			'minutes without call' => 'minutes without call',
			'only connected' => 'only connected',
			'last age cdr' => 'last age cdr',
			'#packet loss' => '#packet loss',
			'sqlsize' => 'sqlsize',
			'memory res' => 'memory res',
			'calls' => 'calls',
			'decrease uptime' => 'decrease uptime',
			'hour' => 'hour',
			'day' => 'day',
			'week' => 'week',
			'month' => 'month'
		),
		'columns' => array(
			'parameter' => 'parameter', 
			'cond' => 'cond', 
			'value' => 'value', 
			'worst' => 'worst', 
			'count' => 'count',
			'total %' => 'total %',
			'alert<br>flags' => 'alert<br>flags',
			'alert flags' => 'alert flags',
			'id' => 'id',
			'call<br>start' => 'call<br>start', 
			'call&nbsp;start' => 'call&nbsp;start',
			'call start' => 'call start',
			'day' => 'day',
			'time' => 'time',
			'duration<br>codec' => 'duration<br>codec', 
			'duration' => 'duration',
			'codec' => 'codec',
			'From<br>To' => 'From<br>To', 
			'From' => 'From', 
			'To' => 'To',
			'SIP IP from<br>to' => 'SIP IP from<br>to', 
			'SIP IP from' => 'SIP IP from', 
			'SIP IP to' => 'SIP IP to',
			'RTP IP from<br>to' => 'RTP IP from<br>to', 
			'RTP IP from' => 'RTP IP from', 
			'RTP IP to' => 'RTP IP to',
			'Caller country code<br>Called country code' => 'Caller country code<br>Called country code',
			'Caller country code' => 'Caller country code',
			'Called country code' => 'Called country code',
			'IP&nbsp;from' => 'IP&nbsp;from',
			'IP&nbsp;to' => 'IP&nbsp;to',
			'MOS' => 'MOS',
			'MOS&nbsp;A' => 'MOS&nbsp;A',
			'MOS&nbsp;B' => 'MOS&nbsp;B',
			'MOS XR<br>avg' => 'MOS XR<br>avg',
			'MOS XR<br>min' => 'MOS XR<br>min',
			'MOS XR<br>avg Caller' => 'MOS XR<br>avg Caller',
			'MOS XR<br>min Caller' => 'MOS XR<br>min Caller',
			'MOS XR<br>avg Called' => 'MOS XR<br>avg Called',
			'MOS XR<br>min Called' => 'MOS XR<br>min Called',
			'MOS XR avg' => 'MOS XR avg',
			'MOS XR min' => 'MOS XR min',
			'MOS XR avg Caller' => 'MOS XR avg Caller',
			'MOS XR min Caller' => 'MOS XR min Caller',
			'MOS XR avg Called' => 'MOS XR avg Called',
			'MOS XR min Called' => 'MOS XR min Called',
			'MOS Silence<br>avg' => 'MOS Silence<br>avg',
			'MOS Silence<br>min' => 'MOS Silence<br>min',
			'MOS Silence<br>avg Caller' => 'MOS Silence<br>avg Caller',
			'MOS Silence<br>min Caller' => 'MOS Silence<br>min Caller',
			'MOS Silence<br>avg Called' => 'MOS Silence<br>avg Called',
			'MOS Silence<br>min Called' => 'MOS Silence<br>min Called',
			'MOS Silence avg' => 'MOS Silence avg',
			'MOS Silence min' => 'MOS Silence min',
			'MOS Silence avg Caller' => 'MOS Silence avg Caller',
			'MOS Silence min Caller' => 'MOS Silence min Caller',
			'MOS Silence avg Called' => 'MOS Silence avg Called',
			'MOS Silence min Called' => 'MOS Silence min Called',
			'LQO<br>Caller' => 'LQO<br>Caller',
			'LQO Caller' => 'LQO Caller',
			'LQO<br>Called' => 'LQO<br>Called',
			'LQO Called' => 'LQO Called',
			'#lost<br>packets' => '#lost<br>packets',
			'#lost packets' => '#lost packets',
			'jitter' => 'jitter',
			'delay count<br>(>={:0}ms)' => 'delay count<br>(>={:0}ms)',
			'delay count (>={:0}ms)' => 'delay count (>={:0}ms)',
			'silence [%]' => 'silence [%]',
			'silence [%]' => 'silence [%]',
			'last silence [s]' => 'last silence [s]',
			'clipping' => 'clipping',
			'one<br>way' => 'one<br>way',
			'one way' => 'one way',
			'missing<br>RTP' => 'missing<br>RTP',
			'missing RTP' => 'missing RTP',
			'pdd' => 'pdd',
			'call-id' => 'call-id',
			'SIP response' => 'SIP response',
			'Reason SIP' => 'Reason SIP',
			'Reason Q.850' => 'Reason Q.850',
			'pdd' => 'pdd',
			'call-id' => 'call-id',
			'call start<br>incidents' => 'call start<br>incidents',
			'incidents' => 'incidents',
			'caller / called' => 'caller / called',
			'sip / rtp' => 'sip / rtp',
			'cond' => 'cond',
			'dscp<br>caller sip' => 'dscp<br>caller sip', 
			'dscp caller sip' => 'dscp caller sip', 
			'dscp<br>called sip' => 'dscp<br>called sip', 
			'dscp called sip' => 'dscp called sip', 
			'dscp<br>caller rtp' => 'dscp<br>caller rtp', 
			'dscp caller rtp' => 'dscp caller rtp', 
			'dscp<br>called rtp' => 'dscp<br>called rtp',
			'dscp called rtp' => 'dscp called rtp',
			'type timeout' => 'type timeout',
			'sensor / issue' => 'sensor / issue',
			'host' => 'host',
			'datetime' => 'datetime',
			'timeperiod rule' => 'timeperiod rule',
			'type calls' => 'type calls',
			'IP' => 'IP',
			'IP_src' => 'IP source',
			'IP_dst' => 'IP destination',
			'location' => 'location',
			'location_src' => 'location src',
			'location_dst' => 'location dst',
			'concurrent calls' => 'concurrent calls',
			'number' => 'number',
			'rtp stream' => 'RTP stream',
			'old IP' => 'old IP',
			'old location' => 'old location',
			'new IP' => 'new IP',
			'new location' => 'new location',
			'destination IP' => 'destination IP',
			'src number' => 'src number',
			'dst number' => 'dst number',
			'country' => 'country',
			'continent' => 'continent',
			'count' => 'count',
			'country by IP' => 'country by IP',
			'country by IP_src' => 'country by IP source',
			'country by IP_dst' => 'country by IP destination',
			'country by number' => 'country by number',
			'price' => 'price',
			'interval' => 'interval',
			'limit' => 'limit',
			'response' => 'response',
			'avg response time [ms]' => 'avg response time [ms]'
		),
		'columns_reg' => array(
			'id<br>sensor id' => 'id<br>sensor id',
			'date<br>time' => 'date<br>time',
			'user name<br>realm' => 'user name<br>realm',
			'source IP' => 'source IP',
			'destination IP' => 'destination IP',
			'from - number (name)<br>domain' => 'from - number (name)<br>domain',
			'to - number<br>domain' => 'to - number<br>domain',
			'contact - number<br>domain' => 'contact - number<br>domain',
			'user agent' => 'user agent',
			'expires<br>at' => 'expires<br>at',
			'state'  => 'state',
			'previous<br>state'  => 'previous<br>state',
			'time from<br>previous state' => 'time from<br>previous state',
			'rrd avg<br>[ms]' => 'rrd avg<br>[ms]',
			'counter' => 'counter'
		),
		'headers' => array(
			'metric' => 'metric',
			'description' => 'description',
			'value' => 'value',
			'% of total' => '% of total'
		),
		'description' => array(
			'total calls' => 'Total number of inbound and outboud calls, answered and unanswered, for the reporting timeframe.',
			'total calls - inbound' => 'Total number of inbound calls, answered and unanswered, for the reporting timeframe.',
			'total calls - outbound' => 'Total number of outbound calls, answered and unanswered, for the reporting timeframe.',
			'average MOS' => 'Average Mean Opinion Score.<br>1 - Unsatisfactory<br>2 - Poor<br>3 - Fair<br>4 - Good<br>5 - Excellent',
			'Number of calls with MOS score' => 'Number of calls with MOS score'
		),
		'indications' => array(
			'mos' => 'M',
			'packets_loss' => 'P',
			'jitter' => 'J',
			'delay_count' => 'D',
			'silence' => 'S',
			'silence_end' => 'E',
			'clipping' => 'C',
			'one_way' => 'O',
			'without_stream' => 'R'
		),
		'values' => array(
			'absolute time out' => 'absolute time out',
			'time out on post BYE' => 'time out on post BYE',
			'time out on RTP' => 'time out on RTP',
			'timeout on one way' => 'timeout on one way',
			'infinity' => 'infinity',
			'no previous call detected' => 'no previous call detected',
			'last cdr age' => 'last cdr age',
			'#packet loss' => '#packet loss',
			'sql queue' => 'sql queue',
			'memory res' => 'memory res',
			'calls' => 'calls',
			'decrease uptime - restart sniffer ?' => 'decrease uptime - restart sniffer ?',
			'memory is full' => 'memory is full',
			'OK' => 'OK',
			'no_response' => 'no response'
		),
		'templates' => array(
			'no_item_matching' => 'no {:0} match',
			'no_item_matching_report' => 'there was no {:0} matching the filter/report rules.',
			'no_item_matching_alert' => 'during {:0} minutes there was no {:1} matching the filter/alert rules.',
			'hide_cdr_rows_all_in_attachment' => 'Hide cdr rows: {:0}. All cdr rows are in attachment cdr_table.csv.',
			'hide_cdr_rows' => 'Alert rule has set CDR limit. Hidden cdr rows: {:0}.',
			'hide_rows_too_many' => 'Alert contains too many rows. Hide rows: {:0}.'
		)
	),
	'passwordCrit' => array(
		'bad' => 'bad password',
		'criteria' => 'password criteria',
		'length' => 'minimum length',
		'small' => 'minimum small letters',
		'large' => 'minimum large letters',
		'number' => 'minimum numbers',
		'other' => 'minimum other characters'
	),
	'autoAudit' => array(
		'download_wav' => 'User [user_name] downloaded audio from call: [datetime] : [caller] -> [called]',
		'download_pcap' => 'User [user_name] downloaded pcap from call: [datetime] : [caller] -> [called]',
		'download_pcap_multiple' => 'User [user_name] downloaded pcap from calls',
		'download_pcap_multiple_call' =>  '[datetime] : [caller] -> [called]',
		'download_pcap_message' => 'User [user_name] downloaded pcap from message: [datetime] : [caller] -> [called]',
		'download_pcap_ss7' => 'User [user_name] downloaded pcap from ss7: [datetime] : [caller] -> [called]',
		'play_wav' => 'User [user_name] listened to call: [datetime] : [caller] -> [called]',
		'show_fax' => 'User [user_name] looked at the fax from call: [datetime] : [caller] -> [called]',
		'batch_download' => 'User [user_name] has used batch download',
		'batch_download_file_format' => 'file format',
		'batch_download_file_format_pcap' => 'file format: pcap',
		'batch_download_file_format_audio' => 'file format: audio',
		'set_filter_cdr' => 'User [user_name] has set the cdr filter'
	)
);

?>
